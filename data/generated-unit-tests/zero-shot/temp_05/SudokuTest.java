
import static org.junit.Assert.*;
import org.junit.Test;

public class SudokuTest {

    @Test
    public void testIsSafe() {
        int[][] board = {{5, 3, 0, 0, 7, 0, 0, 0, 0},
                         {6, 0, 0, 1, 9, 5, 0, 0, 0},
                         {0, 9, 8, 0, 0, 0, 0, 6, 0},
                         {8, 0, 0, 0, 6, 0, 0, 0, 3},
                         {4, 0, 0, 8, 0, 3, 0, 0, 1},
                         {7, 0, 0, 0, 2, 0, 0, 0, 6},
                         {0, 6, 0, 0, 0, 0, 2, 8, 0},
                         {0, 0, 0, 4, 1, 9, 0, 0, 5},
                         {0, 0, 0, 0, 8, 0, 0, 7, 9}};
        assertTrue(Sudoku.isSafe(board, 0, 2, 4));
        assertFalse(Sudoku.isSafe(board, 0, 2, 7));
        assertFalse(Sudoku.isSafe(board, 0, 2, 3));
        assertFalse(Sudoku.isSafe(board, 0, 2, 5));
    }

    @Test
    public void testSolveSudoku() {
        int[][] board = {{5, 3, 0, 0, 7, 0, 0, 0, 0},
                         {6, 0, 0, 1, 9, 5, 0, 0, 0},
                         {0, 9, 8, 0, 0, 0, 0, 6, 0},
                         {8, 0, 0, 0, 6, 0, 0, 0, 3},
                         {4, 0, 0, 8, 0, 3, 0, 0, 1},
                         {7, 0, 0, 0, 2, 0, 0, 0, 6},
                         {0, 6, 0, 0, 0, 0, 2, 8, 0},
                         {0, 0, 0, 4, 1, 9, 0, 0, 5},
                         {0, 0, 0, 0, 8, 0, 0, 7, 9}};
        assertTrue(Sudoku.solveSudoku(board, 9));
        int[][] expected = {{5, 3, 4, 6, 7, 8, 9, 1, 2},
                            {6, 7, 2, 1, 9, 5, 3, 4, 8},
                            {1, 9, 8, 3, 4, 2, 5, 6, 7},
                            {8, 5, 9, 7, 6, 1, 4, 2, 3},
                            {4, 2, 6, 8, 5, 3, 7, 9, 1},
                            {7, 1, 3, 9, 2, 4, 8, 5, 6},
                            {9, 6, 1, 5, 3, 7, 2, 8, 4},
                            {2, 8, 7, 4, 1, 9, 6, 3, 5},
                            {3, 4, 5, 2, 8, 6, 1, 7, 9}};
        assertArrayEquals(expected, board);
    }

    @Test
    public void testPrint() {
        int[][] board = {{5, 3, 4, 6, 7, 8, 9, 1, 2},
                         {6, 7, 2, 1, 9, 5, 3, 4, 8},
                         {1, 9, 8, 3, 4, 2, 5, 6, 7},
                         {8, 5, 9, 7, 6, 1, 4, 2, 3},
                         {4, 2, 6, 8, 5, 3, 7, 9, 1},
                         {7, 1, 3, 9, 2, 4, 8, 5, 6},
                         {9, 6, 1, 5, 3, 7, 2, 8, 4},
                         {2, 8, 7, 4, 1, 9, 6, 3, 5},
                         {3, 4, 5, 2, 8, 6, 1, 7, 9}};
        Sudoku.print(board, 9);
        // Output should be:
        // 5 3 4 | 6 7 8 | 9 1 2 
        // 6 7 2 | 1 9 5 | 3 4 8 
        // 1 9 8 | 3 4 2 | 5 6 7 
        // ------+-------+------
        // 8 5 9 | 7 6 1 | 4 2 3 
        // 4 2 6 | 8 5 3 | 7 9 1 
        // 7 1 3 | 9 2 4 | 8 5 6 
        // ------+-------+------
        // 9 6 1 | 5 3 7 | 2 8 4 
        // 2 8 7 | 4 1 9 | 6 3 5 
        // 3 4 5 | 2 8 6 | 1 7 9 
    }
}